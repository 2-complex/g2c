{
  'type' : 'Model',
  'name' : 'box',
  'include' : ['box.mesh'],
  'elements' : [
    {
      'type' : 'Texture',
      'name' : 'spots',
      'file' : 'spots.png',
      'unit' : 0,
    },
    {
      'type' : 'Assumption',
      'name' : 'woodMaterial',
      'effect' : 'phongWithTexture',
      'color' : [1.0, 1.0, 1.1, 1, ],
      'texture' : 'spots',
    },
    {
      'type' : 'Assumption',
      'name' : 'cubeTransform',
    },
    {
      'type' : 'Assumption',
      'name' : 'context',
    },
    {
      'type' : 'Effect',
      'name' : 'phongWithTexture',
      'vertexCode' : '
        uniform mat4 modelView;
        uniform mat4 projection;
        
        attribute vec3 vertex;
        attribute vec3 normal;
        attribute vec2 texcoord;
        
        varying vec3 v_position;
        varying vec3 v_normal;
        varying vec2 v_texCoord;
        
        void main()
        {
          v_position = vertex;
          v_normal = normal;
          v_texCoord = texcoord;
          gl_Position = projection * modelView * vec4(vertex, 1.0);
        }
        ',
      'fragmentCode' : '
        varying vec3 v_position;
        varying vec3 v_normal;
        varying vec2 v_texCoord;
        
        uniform sampler2D texture;
        uniform vec4 color;
        
        void main()
        {
          float t = dot(v_normal, vec3(0.3,0.5,1.0));
          if( t<0.1 ) t = 0.1;
          gl_FragColor = color * vec4(t * color.xyz * texture2D(texture, v_texCoord).xyz, 1.0);
        }
        ',
    },
    {
      'type' : 'Shape',
      'name' : 'cubeShape',
      'geometry' : 'cube_mesh_geometry',
      'assumptions' : [
        'woodMaterial',
        'cubeTransform',
        'context',
      ],
    },
  ],
}
